// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from djinni_sqlite.djinni

#include "NativeTodoList.hpp"  // my header
#include "Marshal.hpp"
#include "NativeMyClientInterface.hpp"
#include "NativeTodo.hpp"
#include "NativeTodoList.hpp"

namespace djinni_generated {

NativeTodoList::NativeTodoList() : ::djinni::JniInterface<::djinni_sqlite::TodoList, NativeTodoList>("dyno/fun/djinni_sqlite/TodoList$CppProxy") {}

NativeTodoList::~NativeTodoList() = default;


CJNIEXPORT void JNICALL Java_dyno_fun_djinni_1sqlite_TodoList_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::djinni_sqlite::TodoList>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_djinni_1sqlite_TodoList_createWithPath(JNIEnv* jniEnv, jobject /*this*/, jstring j_path)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::djinni_sqlite::TodoList::create_with_path(::djinni::String::toCpp(jniEnv, j_path));
        return ::djinni::release(::djinni_generated::NativeTodoList::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_dyno_fun_djinni_1sqlite_TodoList_setLogger(JNIEnv* jniEnv, jobject /*this*/, jobject j_logger)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        ::djinni_sqlite::TodoList::set_logger(::djinni_generated::NativeMyClientInterface::toCpp(jniEnv, j_logger));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_djinni_1sqlite_TodoList_00024CppProxy_native_1getTodos(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::djinni_sqlite::TodoList>(nativeRef);
        auto r = ref->get_todos();
        return ::djinni::release(::djinni::List<::djinni_generated::NativeTodo>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jint JNICALL Java_dyno_fun_djinni_1sqlite_TodoList_00024CppProxy_native_1addTodo(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_label)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::djinni_sqlite::TodoList>(nativeRef);
        auto r = ref->add_todo(::djinni::String::toCpp(jniEnv, j_label));
        return ::djinni::release(::djinni::I32::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_dyno_fun_djinni_1sqlite_TodoList_00024CppProxy_native_1updateTodoCompleted(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_id, jint j_completed)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::djinni_sqlite::TodoList>(nativeRef);
        auto r = ref->update_todo_completed(::djinni::I32::toCpp(jniEnv, j_id),
                                            ::djinni::I32::toCpp(jniEnv, j_completed));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_dyno_fun_djinni_1sqlite_TodoList_00024CppProxy_native_1deleteTodo(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_id)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::djinni_sqlite::TodoList>(nativeRef);
        auto r = ref->delete_todo(::djinni::I32::toCpp(jniEnv, j_id));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
